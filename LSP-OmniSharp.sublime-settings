{
    "version": "1.37.5",
    "selector": "source.cs | source.cake",
    "settings": {
        // Enable/disable default C# formatter (requires restart).
        "csharp.format.enable": true,
        // Specifies the maximum number of files for which diagnostics are reported
        // for the whole workspace. If this limit is exceeded, diagnostics will be
        // shown for currently opened files only. Specify 0 or less to disable the
        // limit completely.
        "csharp.maxProjectFileCountForDiagnosticAnalysis": 1000,
        // Specifies whether the references CodeLens should be shown.
        "csharp.referencesCodeLens.enabled": true,
        // Enable/disable Semantic Highlighting for C# files (Razor files currently
        // unsupported). Defaults to false. Close open files for changes to take
        // effect.
        "csharp.semanticHighlighting.enabled": false,
        // Suppress the notification window to add missing assets to build or debug
        // the application.
        "csharp.suppressBuildAssetsNotification": false,
        // Suppress the warning that the .NET Core SDK is not on the path.
        "csharp.suppressDotnetInstallWarning": false,
        // Suppress the notification window to perform a 'dotnet restore' when
        // dependencies can't be resolved.
        "csharp.suppressDotnetRestoreNotification": false,
        // Suppress 'hidden' diagnostics (such as 'unnecessary using directives')
        // from appearing in the editor or the Problems pane.
        "csharp.suppressHiddenDiagnostics": true,
        // Suppress the warning that project.json is no longer a supported project
        // format for .NET Core applications
        "csharp.suppressProjectJsonWarning": false,
        // Specifies whether the run and debug test CodeLens should be shown.
        "csharp.testsCodeLens.enabled": false,
        // The name of the default solution used at start up if the repo has
        // multiple solutions. e.g.'MyAwesomeSolution.sln'. Default value is `null`
        // which will cause the first in alphabetical order to be chosen.
        "omnisharp.defaultLaunchSolution": null,
        // Specifies whether notifications should be shown if OmniSharp encounters
        // warnings or errors loading a project. Note that these warnings/errors are
        // always emitted to the OmniSharp log
        "omnisharp.disableMSBuildDiagnosticWarning": false,
        // Enables support for decompiling external references instead of viewing
        // metadata.
        "omnisharp.enableDecompilationSupport": false,
        // Enables support for reading code style, naming convention and analyzer
        // settings from .editorconfig.
        "omnisharp.enableEditorConfigSupport": false,
        // Enables support for showing unimported types and unimported extension
        // methods in completion lists. When committed, the appropriate using
        // directive will be added at the top of the current file. This option can
        // have a negative impact on initial completion responsiveness, particularly
        // for the first few completion sessions after opening a solution.
        "omnisharp.enableImportCompletion": false,
        // If true, MSBuild project system will only load projects for files that
        // were opened in the editor. This setting is useful for big C# codebases
        // and allows for faster initialization of code navigation features only for
        // projects that are relevant to code that is being edited. With this
        // setting enabled OmniSharp may load fewer projects and may thus display
        // incomplete reference lists for symbols.
        "omnisharp.enableMsBuildLoadProjectsOnDemand": false,
        // Enables support for roslyn analyzers, code fixes and rulesets.
        "omnisharp.enableRoslynAnalyzers": false,
        // Specifies the level of logging output from the OmniSharp server.
        // possible values: trace, debug, information, warning, error, critical
        "omnisharp.loggingLevel": "information",
        // The maximum number of items that 'Go to Symbol in Project' operation
        // can show. The limit is applied only when a positive number is specified
        // here.
        "omnisharp.maxFindSymbolsItems": 1000,
        // The minimum number of characters to enter before 'Go to Symbol in
        // Project' operation shows any results.
        "omnisharp.minFindSymbolsFilterLength": 0,
        // Specifes whether OmniSharp should use Sublime Text settings for C# code
        // formatting (use of tabs, indentation size).
        "omnisharp.useEditorFormattingSettings": true,
        // Specifies whether to disable Razor language features.
        "razor.disabled": false,
        // Enable/disable default Razor formatter.
        "razor.format.enable": true,
        // Specifies whether to output all messages [Verbose], some messages
        // [Messages] or not at all [Off].
        // possible values: Off, Messages, Verbose
        "razor.trace": "Off",
    }
}
